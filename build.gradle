/*
 * This build file was auto generated by running the Gradle 'init' task
 * by 'stang' at '8/15/16 12:32 PM' with Gradle 2.14
 *
 * This generated file contains a sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * user guide available at https://docs.gradle.org/2.14/userguide/tutorial_java_projects.html
 */

// Apply the java plugin to add support for Java
apply plugin: 'java'

description='A simple library for sharing connections in SQLite\'s default serialized threading mode'
group='com.soulostar'
version='0.1.0'
sourceCompatibility=1.7

// In this section you declare where to find the dependencies of your project
repositories {
    // Use 'jcenter' for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
}

// In this section you declare the dependencies for your production and test code
dependencies {
    // The production code uses the SLF4J logging API at compile time
    compile 'com.google.code.findbugs:jsr305:3.0.0'
    compile 'com.google.guava:guava:19.0'
    compile 'org.slf4j:slf4j-api:1.7.21'

    // Declare the dependency for your favourite test framework you want to use in your tests.
    // TestNG is also supported by the Gradle Test task. Just change the
    // testCompile dependency to testCompile 'org.testng:testng:6.8.1' and add
    // 'test.useTestNG()' to your build script.
    testCompile 'junit:junit:4.12'
    testRuntime 'org.slf4j:slf4j-simple:1.7.21'
    testCompile 'org.xerial:sqlite-jdbc:3.7.2'
}

task fatJar(type: Jar) {
	baseName = project.name + '-all'
	from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
	with jar
}


task checkJavaVersion << {
	def currentVersion = JavaVersion.current().toString()
	def requiredVersion = sourceCompatibility.toString()
	if (!currentVersion.equals(requiredVersion)) {
		throw new GradleException("Gradle must be using the Java version specified by sourceCompatibility. "
			+ "Expected: " + requiredVersion + ", Found: " + currentVersion)
	}
}

compileJava.dependsOn checkJavaVersion